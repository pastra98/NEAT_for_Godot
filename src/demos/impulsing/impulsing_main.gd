extends Node2D

# TODO:
# - add impulsing to demo loader, make sure the params get copied to there

# Notes:
# - changed act function to 4 outputs, changed params to use simoid

var time = 0
var total_time = 0
var time_step = 0.2
var generation_time = 20

var paused = true

var agent_body_path = "res://demos/impulsing/creature/Creature.tscn"
var ga: GeneticAlgorithm

var use_player = false
var change_target_pos_gen = 3
var creature_controller


func _ready():
    if use_player:
        var creature_to_control = load(agent_body_path).instance()
        creature_controller = load("res://demos/impulsing/creature/creature_controller.gd").new(creature_to_control)
        add_child(creature_controller)
        creature_controller.add_child(creature_to_control)
    else:
        ga = GeneticAlgorithm.new(4, 4, agent_body_path, true, "impulsing_params")
        add_child(ga)
        place_bodies(ga.get_curr_bodies())
        paused = false


func _physics_process(delta) -> void:
    # update time since last update
    if not paused:
        time += delta; total_time += delta
        # next timestep
        if time > time_step:
            ga.next_timestep()
            time = 0
        # check if enough time has passed to start a new generation
        if (total_time > generation_time or ga.all_agents_dead) and !$Target.dragging:
            # move the target, every 10 generations make it flip sides
            $Target.move_to_new_pos(ga.curr_generation % change_target_pos_gen == 0)
            # go to next generation
            ga.evaluate_generation()
            ga.next_generation()
            place_bodies(ga.get_curr_bodies())
            total_time = 0


func place_bodies(bodies: Array) -> void:
    """Adds the bodies scenes generated by the ga to the tree, and removes the old ones.
    """
    # remove the bodies from the last generation
    for last_gen_body in $CreatureSpawn.get_children():
        last_gen_body.queue_free()
    # add the new bodies to the scene
    for body in bodies:
        $CreatureSpawn.add_child(body)